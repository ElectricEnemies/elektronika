/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	MAIN.CPP					(c)	YoY'01						WEB: www.aestesis.org
//
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include						"main.h"
#include						<math.h>
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

ACI								AexampleInfo::CI	= ACI("AexampleInfo",	GUID(0x80045735,0x00000030), &AtransitionInfo::CI, 0, NULL);
ACI								Aexample::CI		= ACI("Aexample",		GUID(0x80045735,0x00000031), &Atransition::CI, 0, NULL);

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static int						count=0;
static Aresource				resdll=Aresource("example02", GetModuleHandle("example02.dll"));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void init()
{
	if(count==0)
	{
		// make globals inits as somes tables
	}
	count++;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void end()
{
	count--;
	if(count==0)
	{
		// free globals inits
	}
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Aexample::Aexample(QIID qiid, char *name, Aobject *f, int x, int y) : Atransition(qiid, name, f, x, y)
{
	Aeffect	*effect=Aeffect::getEffect(this);
	image=new Abitmap(effect->getVideoWidth(), effect->getVideoHeight());

	init();	// global init
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Aexample::~Aexample()
{
	delete(image);
	end();	// global free
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

bool Aexample::load(class Afile *f)
{
	return true;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

bool Aexample::save(class Afile *f)
{
	return true;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void Aexample::settings(bool emergency)
{
	Aeffect	*effect=Aeffect::getEffect(this);

	if((image->w!=effect->getVideoWidth())||(image->h!=effect->getVideoHeight()))
	{
		delete(image);
		image=new Abitmap(effect->getVideoWidth(), effect->getVideoHeight());
	}
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void Aexample::paint(Abitmap *b)
{
	Afont	*f=alib.getFont(fontCONFIDENTIAL14);
	b->boxfa(0, 0, pos.w, pos.h, 0xff000000, 0.1f);
	f->set(b, 10, 10, "fade/blur", 0xff404040);
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

bool Aexample::action(Abitmap *out, Abitmap *b0, Abitmap *b1, float cross, int src, float power, Abitmap *in[8])
{
	int	w=out->w;
	int	h=out->h;
	if(b0&&b1)
	{
		if(cross==0.f)
		{
			out->set(0, 0, b0, bitmapDEFAULT, bitmapDEFAULT);
		}
		else if(cross==1.f)
		{
			out->set(0, 0, b1, bitmapDEFAULT, bitmapDEFAULT);
		}
		else
		{
			out->blur(b0, cross*5.f, cross*5.f);
			image->blur(b1, (1.f-cross)*5.f, (1.f-cross)*5.f);
			image->flags=bitmapGLOBALALPHA;
			image->alpha=cross;
			out->set(0, 0, image, bitmapDEFAULT, bitmapDEFAULT);
		}
	}
	else if(b0)
	{
		if(cross==0.f)
		{
			out->set(0, 0, b0, bitmapDEFAULT, bitmapDEFAULT);
		}
		else if(cross==1.f)
		{
			out->boxf(0, 0, w, h, 0xff000000);
		}
		else
		{
			out->blur(b0, cross*5.f, cross*5.f);
			out->boxfa(0, 0, w, h, 0xff000000, cross);
		}
	}
	else if(b1)
	{
		if(cross==0.f)
		{
			out->boxf(0, 0, w, h, 0xff000000);
		}
		else if(cross==1.f)
		{
			out->set(0, 0, b1, bitmapDEFAULT, bitmapDEFAULT);
		}
		else
		{
			out->blur(b1, (1.f-cross)*5.f, (1.f-cross)*5.f);
			out->boxfa(0, 0, w, h, 0xff000000, 1.f-cross);
		}
	}
	else
		out->boxf(0, 0, w, h, 0xff000000);
	return TRUE;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Atransition * AexampleInfo::create(QIID qiid, char *name, Aobject *f, int x, int y)
{
	return new Aexample(qiid, name, f, x, y);
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

extern "C" 
{
	DLLEXPORT class Aplugz * getPlugz()
	{
		return new AexampleInfo("example 02", &Aexample::CI, "fade/blur", "fade/blur");
	}
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
