/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	BUTTON.H					(c)	YoY'00						WEB: www.aestesis.org
//
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#ifndef							_BUTTON_H_
#define							_BUTTON_H_
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include						"types.h"
#include						"surface.h"
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//	If you use directly the variables in the class API, it's at your own risks. Prefer the methods...   

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#define							guidBUTTON						(Abutton::CI.guid)

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//! a gui button
class Abutton : public Aobject
{
friend class ActrlButton;
public:
	enum
	{
								btCAPTION=1,
								btBITMAP=2,
								bt2STATES=4,
								btALIGNRIGHT=8,
								btALIGNLEFT=16,
								btALIGNCENTER=8|16,
								btENABLEMODE=32
	};

	enum
	{
								btCHECK=8,
	};


	ALIBOBJ


	ADLL						Abutton							(char *name, Aobject *L, int x, int y, int def=btCHECK|btALIGNCENTER);
	ADLL						Abutton							(char *name, Aobject *L, int x, int y, int w, int h, char *caption=NULL, int type=btCAPTION);
	ADLL						Abutton							(char *name, Aobject *L, int x, int y, int w, int h, Aresobj *o, int type=btBITMAP);
	ADLL						Abutton							(char *name, Aobject *L, int x, int y, int w, int h, Abitmap *b, int type=btBITMAP);
	ADLL virtual				~Abutton						();

	ADLL virtual void			paint							(Abitmap *b);
	ADLL virtual bool			mouse							(int x, int y, int state, int event);

	ADLL virtual void			setCaption						(char *caption);
	ADLL virtual char *			getCaption						()							{ return caption; }

	virtual void				setAlign						(int alignmode);

	virtual bool				isChecked						()							{ return checked; }
	ADLL virtual void			setChecked						(bool c);

	ADLL void					change							(Abitmap *b);

	dword						colorBACKNORMAL;
	dword						colorBACKOVER;
	dword						colorBACKDOWN;
	dword						colorBACKCHECK;
	dword						colorFORENORMAL;
	dword						colorFOREOVER;
	dword						colorFOREDOWN;
	dword						colorFORECHECK;

protected:

	enum
	{
								modeLEAVE,
								modeOVER,
								modePRESS
	};


	int							type;
	bool						checked;
	bool						press;
	int							mode;
	char						*caption;
	Abitmap						*bmp1;
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

__inline void Abutton::setAlign(int align)
{
	type&=~btALIGNCENTER;
	type|=align&btALIGNCENTER;
	repaint();
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#endif							//_TITLEBAR_H_
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
