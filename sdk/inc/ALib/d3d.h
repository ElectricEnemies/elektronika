/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	D3D.H						(c)	YoY'03						WEB: www.aestesis.org
//
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#ifndef							_D3D_H_
#define							_D3D_H_
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//#include						<d3d9.h>
//#include						<d3dx9.h>
#include						"node.h"
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//	If you use directly the variables in the class API, it's at your own risks. Prefer the methods...   

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#define							guidD3D							(Ad3d::CI.guid)

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef interface				IDirect3D9						IDirect3D9;
typedef interface				IDirect3DDevice9				IDirect3DDevice9;
typedef interface				IDirect3DSwapChain9				IDirect3DSwapChain9;
typedef interface				IDirect3DTexture9				IDirect3DTexture9;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// d3d device access
class Ad3d : public Anode
{
public:
	ALIBOBJ
	
	enum
	{
								d3dNORMAL			=0,
	};
	
	enum
	{
								d3dADAPTER_DEFAULT	=0,
								d3dADAPTER_01		=1,
								d3dADAPTER_02		=2,
								d3dADAPTER_03		=3
	};

	ADLL						Ad3d							(char *name, dword flags=d3dNORMAL);
	ADLL virtual				~Ad3d							();
	
	ADLL virtual int			getAdapterCount					();
	ADLL HMONITOR				getAdapterMonitor				(int adapter=d3dADAPTER_DEFAULT);
	ADLL virtual bool			getAdapterName					(char *name, int adapter=d3dADAPTER_DEFAULT);
	ADLL virtual int			getAdapterWidth					(int adapter=d3dADAPTER_DEFAULT);
	ADLL virtual int			getAdapterHeight				(int adapter=d3dADAPTER_DEFAULT);

	ADLL virtual bool			createDevice					(class Awindow *win, int adapter=d3dADAPTER_DEFAULT, bool fullscreen=false);
	ADLL virtual bool			createDevice					(HWND hwnd, int adapter=d3dADAPTER_DEFAULT, bool fullscreen=false);
	ADLL virtual void			releaseDevice					();

	ADLL void *					addSwapChain					(class Awindow *win);	// return a (IDirect3DSwapChain9 *)

	bool						isOK;
	IDirect3D9					*d3d;
	IDirect3DDevice9			*d3dev;
	int							w;
	int							h;
	dword						flags;
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#endif							//_D3D_H_
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	