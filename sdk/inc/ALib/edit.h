/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	EDIT.H						(c)	YoY'01						WEB: www.aestesis.org
//
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#ifndef							_EDIT_H_
#define							_EDIT_H_
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include						"interface.h"
#include						"types.h"
#include						"object.h"
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//	If you use directly the variables in the class API, it's at your own risks. Prefer the methods...   

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#define							guidEDIT						(Aedit::CI.guid)

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// a GUI edit box
class Aedit : public Aobject
{
public:
	ALIBOBJ
	enum
	{
								stateMULTILINE					= Aobject::stateLAST,
								stateOVERWRITE					= stateMULTILINE<<1,
								stateLAST						= stateOVERWRITE<<1
	};

	dword						colorBackground;
	dword						colorBorder;
	dword						colorText;
	dword						colorCursor;
	dword						colorSelect;

	
	ADLL						Aedit							(char *name, class Aobject *L, int x, int y, int w, int h);
	ADLL virtual				~Aedit							();

	ADLL virtual void			pulse							();
	ADLL virtual void			paint							(Abitmap *b);
	ADLL virtual bool			mouse							(int x, int y, int state, int event);
	ADLL virtual bool			keyboard						(int event, int ascii, int scan, int state);

	virtual bool				filter							(char c)	{ return true; }

	ADLL virtual void			set								(char *text);
	ADLL virtual void			get								(char *text, int size);
	ADLL virtual int			getSize							();

// private

    Afont						*font;
    char						*caption;
    int							fsel;
    int							lsel;
    int							cursor;
    boolean						cursvis;
    int							xx;
    int							yy;
    int							estate;
    int							xMouse;
    boolean						haveFocus;
	int							sizeAlloc;

private:
	int							getMpos(int x, int y);
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#endif							//_EDIT_H_
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
