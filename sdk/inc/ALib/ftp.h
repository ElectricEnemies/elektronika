/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	FTP.H						(c)	YoY'05						WEB: www.aestesis.org
//
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#ifndef							_FTP_H_
#define							_FTP_H_
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include						"types.h"
#include						"file.h"
#include						"buffer.h"
#include						"section.h"
#include						"thread.h"
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//	If you use directly the variables in the class API, it's at your own risks. Prefer the methods...   

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#define							guidFTPCLIENT					(AftpClient::CI.guid)

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//! an ftp client API
class AftpClient : public Anode, public Athread
{
public:
	ALIBOBJ

	enum
	{
								actionNONE,
								actionCONNECT,
								actionDISCONNECT,
								actionSTOR
	};

	enum
	{
								statusNOTCONNECTED=0,
								statusCONNECTED=1,
								statusSTOR=2
	};

	ADLL						AftpClient						(char *serveur, char *login, char *pwd);
	ADLL virtual				~AftpClient						();

	ADLL virtual bool			sendFile						(char *name, Afile *f);

	ADLL virtual bool			isOK							();
	ADLL int					getStatus						();

	ADLL void					connect							();
	ADLL void					disconnect						();
	ADLL virtual void			run								();
	
	Asection					section;
	char						*srv;
	char						*log;
	char						*pwd;
	int							port;

	int							action;
	int							status;

	class AftpSocket			*sock;
	Abuffer						*buffer;
	char						filename[1024];
	// private
	//SOCKET						s;
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#endif							//_FTP_H_
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
