/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	MOVIE.H						(c)	YoY'01						WEB: www.aestesis.org
//
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#ifndef							_MOVIE_H_
#define							_MOVIE_H_
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include						"types.h"
#include						"node.h"
#include						"bitmap.h"
#include						"avi.h"
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//	If you use directly the variables in the class API, it's at your own risks. Prefer the methods...   

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#define							guidMOVIE						(Afile::CI.guid)

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#define							MAXMOVIEWIDTH					(720)
#define							MAXMOVIEHEIGHT					(576)

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class AmovieFileInfo
{
public:
	char						codec[5];
	dword						codec4cc;
	int							width;
	int							height;
	float						fps;
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//! movie reader
class Amovie : public Anode
{
public:

	enum
	{
								CURRENT=-100,
								FIRST,
								LAST,
								NEXT,
								PREVIOUS
	};

	enum
	{
								typeNORMAL,
								typeJPEG,
								typeSTREAMLOAD,
								typeFLIFLCLOAD,
								typeOWNAVI,
								typeFILEMEMORY

	};

	ADLL static ACI				CI;
	virtual ACI					*getCI							()						{ return &CI; }

	ADLL						Amovie							(char *name, int w, int h, int nbBits);	
	ADLL						Amovie							(char *name, int w, int h, int nbBits, bool fileMemory);	
	ADLL						Amovie							(char *name, int w, int h, float quality=1.f);	
	ADLL						Amovie							(char *name, char *filename);
	ADLL virtual				~Amovie							();

	ADLL void					clear							();

	ADLL bool					remove							(int pos=CURRENT);
	ADLL bool					insert							(class Abitmap *b=NULL, int pos=CURRENT);
	ADLL bool					append							(class Abitmap *b=NULL, int pos=CURRENT);
	ADLL bool					select							(int pos=NEXT);

	ADLL bool					get								(class Abitmap *b, int pos=CURRENT);
	ADLL Abitmap *				get								(int pos=CURRENT);

	//ADLL bool					get								(class Abitmap *b, int xd, int yd, int state, int pos=CURRENT);
	//ADLL bool					get								(class Abitmap *b, int xd, int yd, int xs, int ys, int w, int h, int pos=CURRENT);
	ADLL bool					get								(class Abitmap *b, int xd, int yd, int wd, int hd, int xs, int ys, int ws, int hs, int state, int flags, float alpha, dword colorkey, int pos=CURRENT);

	ADLL float					getFPS							();
	
	ADLL static class Abitmap *	getSnapshot						(char *filename, float *fps);
	ADLL static bool			getFileInfo						(AmovieFileInfo *mfinfo, char * filename);
	

	class bitmapL				*firstB;
	class bitmapL				*lastB;

	class bitmapL				*current;
	int							currentI;

	int							w;
	int							h;
	int							nbBits;
	int							nbFrames;
	bool						defaultFT;
	float						fps;

	HANDLE						hFile;
	Abitmap						*bmpFile;
	
	Abitmap						*jpeg;
	float						jpegQuality;

	int							type;
	bool						isOK;

	// private ownAVI

	class AaviRead				*avi;

	// private DXmedia

	bool						open							(char *filename);
	void						close							();
	
	class AinfoMovie			*info;

	bool						isLast;

	// pricate FLI/FLC

	struct fli					*fliflc;
	class Abitmap				*bfli;
	bool						openFLI							(char *filename);
	void						closeFLI						();

	bool						del								(class bitmapL *bl);
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#endif							//_MOVIE_H_
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
