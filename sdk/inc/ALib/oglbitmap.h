/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	OGLBITMAP.H					(c)	YoY'02						WEB: www.aestesis.org
//
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#ifndef							_OGLBITMAP_H_
#define							_OGLBITMAP_H_
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//#include						<stdio.h>
#include						"types.h"
#include						"node.h"
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//	If you use directly the variables in the class API, it's at your own risks. Prefer the methods...   

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#define							guidOGLBITMAP					(AoglBitmap::CI.guid)

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//! an offscreen openGL memory bitmap 
class AoglBitmap : Anode
{
public:
	ALIBOBJ

	ADLL						AoglBitmap						(int w, int h);
	ADLL virtual				~AoglBitmap						();

	ADLL void					makeCurrent						();
	ADLL void					releaseCurrent					();

	ADLL void					set2							(class Abitmap *b);

	ADLL static void			texture							(class Abitmap *b, int level=0);
	ADLL static void			texture							(class Abitmap *b, int x, int y, int w, int h, int level=0);

	int							w,h;
	dword						*body32;
	bool						isOK;

	HGLRC						glrc;

private:
	BITMAPINFOHEADER			bih;
	HBITMAP						hbmp;
	HBITMAP						ohbmp;
	HDC							hdc;
	//HBITMAP						rbmp;
	//HBITMAP						orbmp;
	//HDC							rdc;
};


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#endif							//_OGLBITMAP_H_
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
