/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	RESOURCE.H					(c)	YoY'99						WEB: www.aestesis.org
//
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#ifndef							_RESOURCE_H_
#define							_RESOURCE_H_
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include						<windows.h>
#include						"node.h"
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//	If you use directly the variables in the class API, it's at your own risks. Prefer the methods...   

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

enum
{
								resourceDEFAULT=0,
								resourceBITMAP
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//! a class that manage resource access
class Aresobj : public Anode
{
	ALIBOBJ

	ADLL						Aresobj							(class Aresource *r, char *name, char *type);
	ADLL virtual				~Aresobj						();

	ADLL virtual void *			lock							();
	ADLL virtual void			unlock							();

	ADLL virtual int			getSize							();

	// private

	HRSRC						h;
	class Aresource	*			r;
	int							nlock;
	void						*ptr;
	int							size;
	char						*type;
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class Aresource : public Anode
{
public:
	ADLL static ACI				CI;
	virtual ACI					*getCI							()						{ return &CI; }

	ADLL						Aresource						();

	ADLL						Aresource						(char *name, HINSTANCE h=GetModuleHandle(NULL));
	ADLL virtual				~Aresource						();

	ADLL virtual Aresobj 		get								(char *name, char *type);
	ADLL virtual Aresobj *		getObj							(char *name, char *type);

	// private

	HINSTANCE					hinstance;
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#endif							//_RESOURCE_H_
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
