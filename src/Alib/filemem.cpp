/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include						"export.h"
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	FILE.CPP					(c)	YoY'99						WEB: www.aestesis.org
//
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include						<windows.h>
#include						<assert.h>
#include						"filemem.h"
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

ADLL ACI						Afilemem::CI=ACI("Afilemem", GUID(0xAE57E515,0x00000401), &Afile::CI, 0, NULL);

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

ADLL Afilemem::Afilemem(char *name, void *buffer, int bufsize) : Afile(name)
{
	this->buffer=buffer;
	this->bufsize=bufsize;
}


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

ADLL Afilemem::~Afilemem()
{
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

ADLL int Afilemem::read(void *p, int s)
{
	sqword	a0=offset;
	sqword	a1=mini(offset+s, bufsize);
	memcpy(p, (byte *)buffer+offset, (size_t)(a1-a0));
	offset=a1;
	//assert(a1!=bufsize);
	return (int)(a1-a0);
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

ADLL int Afilemem::write(void *p, int s)
{
	sqword	a0=offset;
	sqword	a1=mini(offset+s, bufsize);
	memcpy((byte *)buffer+offset, p, (size_t)(a1-a0));
	offset=a1;
	assert(a1!=bufsize);
	size=maxi(size, offset);
	return (int)(a1-a0);
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

ADLL bool Afilemem::readStringAlloc(char **s)
{
	int	len;
	if(read(&len, sizeof(len))!=sizeof(len))
		return false;
	*s=(char *)malloc(len+1);
	if(read(*s, len)!=len)
		return false;
	(*s)[len]=0;
	return true;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

ADLL bool Afilemem::readString(char *s)
{
	int	len;
	if(read(&len, sizeof(len))!=sizeof(len))
		return false;
	if(read(s, len)!=len)
		return false;
	s[len]=0;
	return true;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

ADLL bool Afilemem::writeString(char *s)
{
	int	len=strlen(s);
	if(!write(&len, sizeof(len)))
		return false;
	if(!write(s, len))
		return false;
	return true;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

ADLL bool Afilemem::seek(sqword n)
{
	if((n>bufsize)||(n<0))
		return FALSE;
	offset=n;
	size=maxi(size, offset);
	return true;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

ADLL sqword Afilemem::getSize()
{
	return size;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
