/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include						"export.h"
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	MENU.CPP					(c)	YoY'00						WEB: www.aestesis.org
//
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include						<stdio.h>
#include						"item.h"
#include						"interface.h"
#include						"resource.h"
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

ADLL ACI						Aitem::CI=ACI("Atree", GUID(0xAE57E515,0x00001050), &Anode::CI, 0, NULL);

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

ADLL Aitem::Aitem(Aitem *i) : Anode(i->name, NULL)
{
	link=i->link;
	data=i->data;
	help=i->help?strdup(i->help):NULL;
}

ADLL Aitem::Aitem(char *name) : Anode(name, NULL)
{
	link=NULL;
	data=0;
	help=NULL;
}

ADLL Aitem::Aitem(char *name, Anode *father, Anode *o, int data) : Anode(name, father)
{
	link=o;
	this->data=data;
	help=NULL;
}

ADLL Aitem::Aitem(char *name, Anode *father, int data, Anode *o) : Anode(name, father)
{
	link=o;
	this->data=data;
	help=NULL;
}

ADLL Aitem::Aitem(char *name, char *help) : Anode(name, NULL)
{
	link=NULL;
	data=0;
	this->help=help?strdup(help):NULL;
}

ADLL Aitem::Aitem(char *name, char *help, Anode *father, Anode *l, int data) : Anode(name, father)
{
	link=l;
	this->data=data;
	this->help=help?strdup(help):NULL;
}

ADLL Aitem::Aitem(char *name, char *help, Anode *father, int data, Anode *l) : Anode(name, father)
{
	link=l;
	this->data=data;
	this->help=help?strdup(help):NULL;
}

ADLL Aitem::~Aitem()
{
	while(fchild)
		delete(fchild);
	if(help)
		free(help);
	if((state&stateDELLINK)&&link)
		delete(link);
}


ADLL void Aitem::copyAll(Aitem *e)
{
	Aitem	*l=(Aitem *)e->fchild;
	Aitem	*c=new Aitem(e);
	add(c);
	while(l)
	{
		c->copyAll(l);
		l=(Aitem *)l->next;
	}
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
