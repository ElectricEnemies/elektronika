/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include						"export.h"
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	SELSIZE.CPP					(c)	YoY'05						WEB: www.aestesis.org
//
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include						<stdio.h>
#include						"selsize.h"
#include						"interface.h"
#include						"resource.h"
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

ADLL ACI						Aselsize::CI=ACI("Aselsize", GUID(0xAE57E515,0x00001170), &Aobject::CI, 0, NULL);

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

ADLL Aselsize::Aselsize(char *name, Aobject *L, int x, int y, int w, int h) : Aobject(name, L, x, y, w, h)
{
	val=0.f;
	colorBACK=0x80404040;
	colorFILL=0xff808000;
	colorBORDER=0x80ffffff;
	colorTEXT=0xffffffff;
	text[0]=0;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

ADLL Aselsize::~Aselsize()
{
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

ADLL bool Aselsize::mouse(int x, int y, int state, int event)
{
	switch(event)
	{
		case mouseLDOWN:
		mouseCapture(true);
		case mouseNORMAL:
		if(state&mouseL)
		{
			float v=maxi(mini((float)x/(float)pos.w, 1.f), 0.f);
			if(v!=val)
			{
				val=v;
				father->notify(this, nyCHANGE);
				repaint();
			}
		}
		return true;

		case mouseLUP:
		mouseCapture(false);
		return true;

	}
	return false;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

ADLL void Aselsize::paint(Abitmap *b)
{
	Afont	*f=alib.getFont(fontTERMINAL06);
	
	b->boxfa(0, 0, pos.w, pos.h, colorBACK);
	b->boxfa(0, 0, (int)((float)pos.w*val), pos.h, colorFILL);
	b->boxa(0, 0, pos.w-1, pos.h-1, colorBORDER);
	b->boxa(1, 1, pos.w-2, pos.h-2, colorBORDER);
	{
		int	x=(pos.w-f->getWidth(text))/2;
		f->set(b, x, (pos.h-f->w)/2, text, colorTEXT); 
	}
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

ADLL void Aselsize::set(char *s)
{
	if(s)
	{
		strncpy(text, s, sizeof(text));
		text[sizeof(text)-1]=0;
	}
	else
		text[0]=0;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
