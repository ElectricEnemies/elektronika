/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include						"export.h"
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	TOOLTIPS.CPP				(c)	YoY'02						WEB: www.aestesis.org
//
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include						<stdio.h>
#include						"tooltips.h"
#include						"interface.h"
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

ADLL ACI						Atooltips::CI=ACI("Atooltips", GUID(0xAE57E515,0x00001100), &Aobject::CI, 0, NULL);

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

ADLL Atooltips::Atooltips(char *name, Aobject *layer) : Aobject(name, layer, 0, 0, 10, 10)
{
	time=-1;
	timer(500);
	zorder(zorderTOP);
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

ADLL Atooltips::~Atooltips()
{
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

ADLL void Atooltips::set(int x, int y, char *s)
{
	Afont		*font=alib.getFont(fontTERMINAL12);
	Arectangle	r;
	strncpy(text, s, sizeof(text));
	text[sizeof(text)]=0;
	r=font->getRectangle(0, 0, text);
	pos.w=r.w+4;
	pos.h=r.h+4;
	{
		Awindow	*w=getWindow();
		m_mouseX=w->mouseX;
		m_mouseY=w->mouseY;
	}
	if(!time)
		time=-1;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

ADLL void Atooltips::set(Aobject *o, char *s)
{
	Afont		*font=alib.getFont(fontTERMINAL12);
	Aobject		*l=(Aobject *)father;
	bool		test=(state&stateVISIBLE)?true:false;
	Arectangle	r;
	int			x,y;
	l->getPosition(o, &x, &y);
	if(test)
		show(false, true);
	strncpy(text, s, sizeof(text));
	text[sizeof(text)]=0;
	strupr(text);
	r=font->getRectangle(0, 0, text);
	pos.w=r.w+4;
	pos.h=r.h+4;
	pos.x=x-pos.w-2;
	pos.y=y-pos.h-2;
	if(pos.x<0)
		pos.x=0;
	if(pos.y<0)
		pos.y=0;
	{
		Awindow	*w=getWindow();
		m_mouseX=w->mouseX;
		m_mouseY=w->mouseY;
	}
	if(o!=m_object)
	{
		time=-1;
		m_object=o;
		test=false;
	}
	if(test)
		show(true, true);
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

ADLL void Atooltips::pulse()
{
	if(time>0)
	{
		time--;
		if(!time)
			show(false, true);
	}
	else if(time<0)
	{
		Awindow	*w=getWindow();
		if((m_mouseX==w->mouseX)&&(m_mouseY==w->mouseY))
		{
			time=5;
			show(true, true);
		}
		else
		{
			m_mouseX=w->mouseX;
			m_mouseY=w->mouseY;
		}
	}
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

ADLL void Atooltips::paint(Abitmap *b)
{
	Afont		*font=alib.getFont(fontTERMINAL12);
	b->boxfa(0, 0, pos.w, pos.h, 0xffff80, 0.7f);
	font->set(b, 2, 2, text, 0xff202020);
	b->box(0, 0, pos.w-1, pos.h-1, 0xf000000);
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
