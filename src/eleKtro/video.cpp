/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include						"elektroexp.h"
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	VIDEO.CPP					(c)	YoY'01						WEB: www.aestesis.org
//
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include						<stdio.h>
#include						"video.h"
#include						"table.h"
#include						"effect.h"
#include						"connect.h"
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

EDLL ACI						Avideo::CI=ACI("Avideo", GUID(0xE4EC7600,0x00012020), &Apin::CI, 0, NULL);

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

EDLL Avideo::Avideo(QIID qiid, char *name, AeffectBack *eb, int type, int x, int y) : Apin(qiid, name, eb, type, x, y, 8, 8)
{
	bitmap->boxf(0, 0, 7, 7, 0xffc00000);
	if((type&pinDIR)==pinOUT)
	{
		image=new Abitmap(eb->effect->getVideoWidth(), eb->effect->getVideoHeight());
		bitmap->box(0, 0, 7, 7, 0xff000000);
	}
	else
	{
		image=NULL;
		bitmap->box(0, 0, 7, 7, 0xffffffff);
	}
	if(type&pinNOGFX)
	{
		bitmap->boxf(0, 0, bitmap->w, bitmap->h, 0x00000000);
		bitmap->flags=bitmapALPHA;
	}
	time=0;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

EDLL Avideo::~Avideo()
{
	if(image)
		delete(image);
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

EDLL Abitmap * Avideo::getBitmap()
{
	if((type&pinDIR)==pinIN)
	{
		if(connect)
			return ((Avideo *)connect->out)->getBitmap();
	}
	else
	{
		return image;
	}
	return NULL;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

EDLL void Avideo::settings(bool emergency)
{
	if(image)
		image->size(effect->getVideoWidth(), effect->getVideoHeight());
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

