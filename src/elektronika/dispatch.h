/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	DISPATCH.H					(c)	YoY'02						WEB: www.aestesis.org
//
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#ifndef							_DISPATCH_H_
#define							_DISPATCH_H_
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include						<interface.h>
#include						"../elektro/elektro.h"
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#define							guidDISPATCH					(Adispatch::CI.guid)

#define							DISPATCH_IN						8
#define							DISPATCH_OUT					4

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class Adispatch : public Aeffect
{
	AOBJ

								Adispatch						(QIID qiid, char *name, AeffectInfo *info, Acapsule *capsule);
	virtual						~Adispatch						();

	virtual bool				load							(class Afile *f);
	virtual bool				save							(class Afile *f);

	virtual void				action							(double time, double dtime, double beat, double dbeat);
	virtual void				settings						(bool emergency);

	virtual int					priority						()	{ return priorityFILTER; }

	virtual bool				oscMessage						(class AoscMessage *reply, class AoscMessage *msg, class AoscNode *onode, int action);
	void						getPreview						(Abitmap *b);

	AoscNode					*oscPreview;
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class AdispatchFront : public AeffectFront
{
	AOBJ

								AdispatchFront					(QIID qiid, char *name, Adispatch *e, int h);
	virtual						~AdispatchFront					();

	bool						notify							(Anode *o, int event, dword p);
	void						paint							(Abitmap *b);

	Abitmap						*back;

	Aselect						*source[DISPATCH_OUT];

	class Awdispatch			*win;
	Abutton						*bwin;
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class AdispatchBack : public AeffectBack
{
	AOBJ

								AdispatchBack					(QIID qiid, char *name, Adispatch *e, int h);
	virtual						~AdispatchBack					();

	void						paint							(Abitmap *b);

	Abitmap						*back;

	Avideo						*in[DISPATCH_IN];
	Avideo						*out[DISPATCH_OUT];
	Asample						*ain[DISPATCH_IN];
	Asample						*aout[DISPATCH_OUT];
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class AdispatchInfo : public AeffectInfo
{
	AOBJ 

								AdispatchInfo					(char *name, ACI *eci, char *ename, char *ehelp);
	virtual int					getEffectClass					() { return MIXER; }
	virtual dword				version							() { return 0x00019900; }

	virtual Aeffect *			create							(QIID qiid, char *name, Acapsule *capsule);
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

__inline AdispatchInfo::AdispatchInfo(char *name, ACI *eci, char *ename, char *ehelp) : AeffectInfo(name, eci, ename, ehelp)
{
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class Aplugz *					dispatchGetInfo					();

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#endif							//_DISPATCH_H
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
