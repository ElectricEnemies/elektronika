/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	DVCAP.H						(c)	YoY'00						WEB: www.aestesis.org
//
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#ifndef							_DVCAP_H_
#define							_DVCAP_H_
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include						<elektro.h>
#include						<tchar.h>
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#define							guidDVCAP						(Advcap::CI.guid)

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#define							SMPSIZE							12000

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef interface				ICaptureGraphBuilder2			ICaptureGraphBuilder2;
typedef interface				IGraphBuilder					IGraphBuilder;
typedef interface				IMediaControl					IMediaControl;
typedef interface				IMediaEventEx					IMediaEventEx;
typedef interface				ISampleGrabber					ISampleGrabber;
typedef interface				IBaseFilter						IBaseFilter;
typedef interface				IAMExtDevice					IAMExtDevice;
typedef interface				IAMExtTransport					IAMExtTransport;
typedef interface				IAMTimecodeReader				IAMTimecodeReader;
typedef interface				IIPDVDec						IIPDVDec;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class Advcap : public Aeffect
{
	AOBJ

								Advcap							(QIID qiid, char *name, AeffectInfo *info, Acapsule *capsule);
	virtual						~Advcap							();

	virtual void				action							(double time, double dtime, double beat, double dbeat);
	virtual void				settings						(bool emergency);

	virtual bool				save							(Afile *f);
	virtual bool				load							(Afile *f);

	virtual int					priority						()	{ return priorityIMPORT; }

	bool						initDV							();
	void						closeDV							();
	bool						enumDV							();
	bool						startDV							();
	void						stopDV							();
	void						infoDV							();

	bool						NukeFilters						(IBaseFilter *pFilter, BOOL bNukeDownStream);

	IIPDVDec *					getDVdec						();
	bool						setDecodeSize					(int size);
	IBaseFilter *				getDecomp						();

	bool						bOK;
	bool						bDV;
	bool						bGO;
	//class CDVGraph				*graph;
	Abitmap						*image;

	Asection					scapture;
    ICaptureGraphBuilder2		*m_pCapture;
    IGraphBuilder				*m_pGraph;
    IMediaControl				*m_pMediaControl;
    IMediaEventEx				*m_pMediaEvent;
    IBaseFilter					*m_pDeviceFilter;
	IBaseFilter					*pDVSplit;
    ISampleGrabber				*m_pGrabber;
	IBaseFilter					*pBF_grabber;
    ISampleGrabber				*m_pGrabberSound;
	IBaseFilter					*pBF_grabberSound;
	IBaseFilter					*m_pNull;
	IBaseFilter					*m_pNullSound;
	IAMExtDevice				*m_pIAMExtDevice;
	IAMExtTransport				*m_pIAMExtTransport;
	IAMTimecodeReader			*m_pIAMTCReader;
    TCHAR						m_DeviceName[ALIB_PATH];
	int							device;
	int							devicemode;
	int							mode;

	Abuffer						*smpbuf;
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class AdvcapFront : public AeffectFront
{
	AOBJ

								AdvcapFront						(QIID qiid, char *name, Advcap *e, int h);
	virtual						~AdvcapFront					();

	bool						save							(Afile *f);
	bool						load							(Afile *f);

	bool						notify							(Anode *o, int event, dword p);
	void						paint							(Abitmap *b);
	virtual bool				system							(int event, dword d0=0, dword d1=0);

	void						pulse							();

	Abitmap						*back;
	PVOID						g_hDevNotify;
	//Abutton						*bMode;
	Abutton						*buttonStop;
	Abutton						*buttonPlay;
	Abutton						*buttonRec;
	Abutton						*buttonFew;
	Abutton						*buttonRew;
	Astatic						*tm1,*tm2,*tm3,*tm4;
	dword						mt1,mt2,mt3,mt4;
	int							mdevice;
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class AdvcapBack : public AeffectBack
{
	AOBJ

								AdvcapBack						(QIID qiid, char *name, Advcap *e, int h);
	virtual						~AdvcapBack						();

	void						paint							(Abitmap *b);

	Abitmap						*back;

	Avideo						*out;
	Asample						*sout;
	//Avideo						*in;
	//Asample						*sin;
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class AdvcapInfo : public AeffectInfo
{
	AOBJ 

								AdvcapInfo						(char *name, ACI *eci, char *ename, char *ehelp);
	virtual int					getEffectClass					() { return INOUT; }
	virtual dword				version							() { return 0x00010500; }

	virtual Aeffect *			create							(QIID qiid, char *name, Acapsule *capsule);
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

__inline AdvcapInfo::AdvcapInfo(char *name, ACI *eci, char *ename, char *ehelp) : AeffectInfo(name, eci, ename, ehelp)
{
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class Aplugz *					dvcapGetInfo					();

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#endif							//_DVCAP_H
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
