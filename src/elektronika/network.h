/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	NETWORK.H					(c)	YoY'02						WEB: www.aestesis.org
//
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#ifndef							_NETWORK_H_
#define							_NETWORK_H_
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include						<interface.h>
#include						"../elektro/elektro.h"
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#define							guidNETWORK						(Anetwork::CI.guid)

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#define							NETWORK_CHANS					23

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class Anetwork : public Aeffect , public Athread
{
public:
	AOBJ

	enum
	{
								NONE=0,
								CLIENT,
								SERVER
	};

								Anetwork						(QIID qiid, char *name, AeffectInfo *info, Acapsule *capsule);
	virtual						~Anetwork						();

	bool						notify							(Anode *o, int event, dword p);

	virtual bool				load							(class Afile *f);
	virtual bool				save							(class Afile *f);

	virtual void				actionStop						();
	virtual void				action							(double time, double dtime, double beat, double dbeat);
	virtual void				settings						(bool emergency);

	virtual int					priority						()	{ return priorityFILTER; }

	virtual void				run								();
	virtual	void				change							(int mode, int port);

	char						srvname[ALIB_PATH];
	Abuffer						*audio;
	Abitmap						*image;
	Asection					simage;
	int							mode;
	Apipe						*pipe;
	int							port;
	bool						bout;
	bool						brun;
	int							frame;
	bool						bvideo;
	bool						baudio;
	bool						berror;
	int							fillsize;
	void						*bufjpeg;
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class AnetworkFront : public AeffectFront
{
	AOBJ

								AnetworkFront					(QIID qiid, char *name, Anetwork *e, int h);
	virtual						~AnetworkFront					();

	bool						notify							(Anode *o, int event, dword p);
	void						paint							(Abitmap *b);
	void						pulse							();

	Abitmap						*back;
	Aedit						*server;
	Asegment					*port;
	Abutton						*browse;
	Abutton						*client;
	Abutton						*power;
	Apaddle						*master;
	Apaddle						*bass;
	Apaddle						*medium;
	Apaddle						*treble;

};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class AnetworkBack : public AeffectBack
{
	AOBJ

								AnetworkBack					(QIID qiid, char *name, Anetwork *e, int h);
	virtual						~AnetworkBack					();

	void						paint							(Abitmap *b);

	Abitmap						*back;

	Avideo						*vin;
	Avideo						*vout;
	Asample						*ain;
	Asample						*aout;
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class AnetworkInfo : public AeffectInfo
{
	AOBJ 

								AnetworkInfo					(char *name, ACI *eci, char *ename, char *ehelp);
	virtual int					getEffectClass					() { return INOUT; }
	virtual dword				version							() { return 0x00010505; }

	virtual Aeffect *			create							(QIID qiid, char *name, Acapsule *capsule);
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

__inline AnetworkInfo::AnetworkInfo(char *name, ACI *eci, char *ename, char *ehelp) : AeffectInfo(name, eci, ename, ehelp)
{
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class Aplugz *					networkGetInfo					();

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#endif							//_NETWORK_H
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
