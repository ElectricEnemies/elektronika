/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	SOUNDINPUT.H				(c)	YoY'00						WEB: www.aestesis.org
//
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#ifndef							_SOUNDINPUT_H_
#define							_SOUNDINPUT_H_
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include						<interface.h>
#include						"../elektro/elektro.h"
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#define							guidSOUNDINPUT					(AsoundInput::CI.guid)

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#define							MAXDSOUNDDEVICE					20
#define							NUMCAPTUREEVENTS				2

#define							MAXINTBUF						(44100)

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class AsoundInput : public Aeffect
{
	AOBJ

								AsoundInput						(QIID qiid, char *name, AeffectInfo *info, Acapsule *capsule);
								//AsoundInput					(char *name, Alayer *l, class Afile *f);
	virtual						~AsoundInput					();

	virtual						void							settings(bool emergency);

	virtual void				action							(double time, double dtime, double beat, double dbeat);

	virtual bool				save							(Afile *f);
	virtual bool				load							(Afile *f);

	virtual int					priority						()	{ return priorityIMPORT; }

	bool						dsoundInit						();
	void						dsoundClose						();
	bool						dsoundStart						(int device);
	void						dsoundStop						();
	void						dsoundRulez						(dword event);

	void						analyse							(void *p, dword s);


	// direct sound

	bool						bOK;
	
	class AinfoSC				*scinfo;


//	dword						opos;
	Asection					dsoundSection;
	bool						rulez;

	float						vleft;
	float						vright;

	Asection					bsection;
	sword						buffer[MAXINTBUF*2];	// 2x size dsound buffer
	int							bread;
	int							blen;
	sqword						breste;
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class AsoundInputFront : public AeffectFront
{
	AOBJ

								AsoundInputFront				(QIID qiid, char *name, AsoundInput *e, int h);// : AeffectFront(name, e, h);
	virtual						~AsoundInputFront				();

	bool						save							(Afile *f);
	bool						load							(Afile *f);

	bool						notify							(Anode *o, int event, dword p);
	void						paint							(Abitmap *b);

	void						pulse							();

	Abitmap						*back;

	Abutton						*mixer;
	Apaddle						*bass;
	Apaddle						*medium;
	Apaddle						*treble;
	Alist						*drivers;
	Aitem						*driverItems;
	Apaddle						*volume;
	Adisplay					*left;
	Adisplay					*right;
	Abutton						*monoL;
	Abutton						*monoR;

	float						m_vleft;
	float						m_vright;
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class AsoundInputBack : public AeffectBack
{
	AOBJ

								AsoundInputBack					(QIID qiid, char *name, AsoundInput *e, int h);
	virtual						~AsoundInputBack				();

	void						paint							(Abitmap *b);

	Abitmap						*back;

	Asample						*out;
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class AsoundInputInfo : public AeffectInfo
{
	AOBJ 

								AsoundInputInfo					(char *name, ACI *eci, char *ename, char *ehelp);
	virtual int					getEffectClass					() { return INOUT; }
	virtual dword				version							() { return 0x00019900; }

	virtual Aeffect *			create							(QIID qiid, char *name, Acapsule *capsule);
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

__inline AsoundInputInfo::AsoundInputInfo(char *name, ACI *eci, char *ename, char *ehelp) : AeffectInfo(name, eci, ename, ehelp)
{
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class Aplugz *					soundInputGetInfo				();

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#endif							//_SOUNDINPUT_H
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
