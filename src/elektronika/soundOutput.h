/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	SOUNDOUTPUT.H				(c)	YoY'00						WEB: www.aestesis.org
//
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#ifndef							_SOUNDOUTPUT_H_
#define							_SOUNDOUTPUT_H_
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include						<dsound.h>
#include						<interface.h>
#include						"../elektro/elektro.h"
#include						"aasio.h"
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#define							guidSOUNDOUTPUT					(AsoundOutput::CI.guid)

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#define							MAXDSOUNDDEVICE					20
#define							NUMEVENTS						2

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//#define							SOUNDDEBUG

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef struct ASOdevice
{
	GUID						guid;
	char						*name;
	char						*module;
} ATOdevice;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class AsoundOutput : public Aeffect, public AasioClient
{
public:
	AOBJ

								AsoundOutput					(QIID qiid, char *name, AeffectInfo *info, Acapsule *capsule);
	virtual						~AsoundOutput					();

	virtual void				settings						(bool emergency);

	virtual void				actionStart						(double time);
	virtual void				actionStop						();
	virtual void				action							(double time, double dtime, double beat, double dbeat);
	
	virtual bool				save							(Afile *f);
	virtual bool				load							(Afile *f);

	virtual int					priority						()	{ return priorityEXPORT; }

	virtual float				getStreamQuality				(class Apin *pin);	// return stream buffer quality (0: good  +:too much buffer  -:need more buffer)

	bool						dsoundInit						();
	void						dsoundClose						();
	bool						dsoundStart						(int device);
	void						dsoundStop						();
	void						dsoundRulez						(dword event);

	bool						asioStart						(int realdevice);
	void						asioStop						();

	void						analyse							(void *p, dword s);


	// direct sound

	bool						bOK;
	LPDIRECTSOUND				lpDirectSound;
	ATOdevice					dev[MAXDSOUNDDEVICE];
	int							ndev;

	DSBUFFERDESC				dbd;
 	LPDIRECTSOUNDBUFFER			lpDirectPrimaryBuffer;
 	LPDIRECTSOUNDBUFFER			lpDirectBuffer;
	LPDIRECTSOUNDNOTIFY			lpDirectNotify;
	HANDLE                      rghEvent[NUMEVENTS];
//	dword						opos;
	Asection					dsoundSection;
	HANDLE						hThread;
	bool						rulez;

	int							asioDevice;

	float						vleft;
	float						vright;
	float						vlatency;
	
	Abuffer						*buffer;
	
	bool						start;
	bool						stop;
	bool						mconnected;

	int							dsize;
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class AsoundOutputFront : public AeffectFront
{
	AOBJ

								AsoundOutputFront				(QIID qiid, char *name, AsoundOutput *e, int h);// : AeffectFront(name, e, h);
	virtual						~AsoundOutputFront				();

	bool						save							(Afile *f);
	bool						load							(Afile *f);

	bool						notify							(Anode *o, int event, dword p);
	void						paint							(Abitmap *b);

	void						pulse							();

	Abitmap						*back;

	Abutton						*mixer;
	
	Adisplay					*left;
	Adisplay					*right;

	Aprogress					*latency;

	Alist						*drivers;
	Aitem						*driverItems;

	float						m_vleft;
	float						m_vright;
	float						m_vlatency;

	Abutton						*clear;

#ifdef SOUNDDEBUG
	Abutton						*bwin;
	class AsoWin				*sowin;
	Asection					swin;
#endif SOUNDDEBUG
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class AsoundOutputBack : public AeffectBack
{
	AOBJ

								AsoundOutputBack				(QIID qiid, char *name, AsoundOutput *e, int h);
	virtual						~AsoundOutputBack				();

	void						paint							(Abitmap *b);

	Abitmap						*back;

	Asample						*in;
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class AsoundOutputInfo : public AeffectInfo
{
	AOBJ 

								AsoundOutputInfo				(char *name, ACI *eci, char *ename, char *ehelp);
	virtual int					getEffectClass					() { return INOUT; }
	virtual dword				version							() { return 0x00019900; }

	virtual Aeffect *			create							(QIID qiid, char *name, Acapsule *capsule);
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

__inline AsoundOutputInfo::AsoundOutputInfo(char *name, ACI *eci, char *ename, char *ehelp) : AeffectInfo(name, eci, ename, ehelp)
{
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class Aplugz *					soundOutputGetInfo				();

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#endif							//_SOUNDOUTPUT_H
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
