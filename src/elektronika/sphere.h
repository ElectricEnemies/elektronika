/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	SPHERE.H					(c)	YoY'01						WEB: www.aestesis.org
//
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#ifndef							_SPHERE_H_
#define							_SPHERE_H_
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include						<interface.h>
#include						"../elektro/elektro.h"
#include						<windows.h>
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#define							guidSPHERE						(Asphere::CI.guid)

#define							MAXSPHEREINPUT					4

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class Asphere : public Aeffect
{
	AOBJ

								Asphere							(QIID qiid, char *name, AeffectInfo *info, Acapsule *capsule);
	virtual						~Asphere						();

	virtual bool				load							(class Afile *f);
	virtual bool				save							(class Afile *f);

	virtual void				action							(double time, double dtime, double beat, double dbeat);
	virtual void				settings						(bool emergency);

	virtual int					priority						()	{ return priorityFILTER; }

	void						fset							(Abitmap *bd, int xd, int yd, int w, int h, Abitmap *bs, int xs, int ys, bool flipX, bool flipY);
	void						fdiag							(Abitmap *bd, bool flip);

	Abitmap						*quart;
	Abitmap						*mirror;
	
	double						*trr;	// rayon en fonction de rayon
	double						*taa;	// angle en fontion de l'angle
	double						*tra;	// rayon en fontion de l'angle
	double						*tar;	// angle en fonction de rayon
	
	double						*txx;
	double						*tyy;
	double						*txy;
	double						*tyx;
	
	class ApolarTab				*polar;
	
	float						afade0;
	float						amplanar;
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class AsphereFront : public AeffectFront
{
	AOBJ

								AsphereFront					(QIID qiid, char *name, Asphere *e, int h);
	virtual						~AsphereFront					();

	bool						notify							(Anode *o, int event, dword p);
	void						paint							(Abitmap *b);

	void						pulse							();

	Abitmap						*back;

	Aselect						*source;

	ActrlButton					*cross;
	ActrlButton					*diag;
	ActrlButton					*vert;
	ActrlButton					*horz;
	class Azone					*zone;

	Apaddle						*pinch;
	Apaddle						*rosace;
	Apaddle						*twirl;
	Apaddle						*sinamp;
	Apaddle						*sinfrq;
	Apaddle						*rotat;
	Apaddle						*zoom;
	Apaddle						*fade0;
	Apaddle						*level;
	Apaddle						*sndlvl;
	Apaddle						*sndpow;
	Apaddle						*sndblur;
	Apaddle						*sndsize;
	Apaddle						*sndflat;
	
	Apaddle						*mplanar;
	Apaddle						*eplanar;
	Apaddle						*e1;
	Apaddle						*e2;
	Apaddle						*e3;
	Apaddle						*e4;
	Apaddle						*splanar;
	Apaddle						*s1;
	Apaddle						*s2;
	Apaddle						*s3;
	Apaddle						*s4;

	Apaddle						*master;
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class AsphereBack : public AeffectBack
{
	AOBJ

								AsphereBack						(QIID qiid, char *name, Asphere *e, int h);
	virtual						~AsphereBack					();

	void						paint							(Abitmap *b);

	Abitmap						*back;

	Avideo						*in[MAXSPHEREINPUT];
	Asample						*ins;
	Avideo						*out;
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class AsphereInfo : public AeffectInfo
{
	AOBJ 

								AsphereInfo						(char *name, ACI *eci, char *ename, char *ehelp);
	virtual int					getEffectClass					() { return EFFECT2D; }
	virtual dword				version							() { return 0x00010500; }

	virtual Aeffect *			create							(QIID qiid, char *name, Acapsule *capsule);
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

__inline AsphereInfo::AsphereInfo(char *name, ACI *eci, char *ename, char *ehelp) : AeffectInfo(name, eci, ename, ehelp)
{
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class Aplugz *					sphereGetInfo					();

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#endif							//_SPHERE_H
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
