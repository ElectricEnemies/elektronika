/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	VISWRP.CPP					(c)	YoY'04						WEB: www.aestesis.org
//
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include						<io.h>
#include						<direct.h>
#include						<math.h>
#include						<assert.h>
#include						"resource.h"
#include						"viswrp.h"
#include						"../../sdk/wa502_sdk/winamp/wa_ipc.h"
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

ACI								AvisInfo::CI	= ACI("AvisInfo",	GUID(0x11111112,0x00000890), &AeffectInfo::CI, 0, NULL);
ACI								Avis::CI		= ACI("Avis",		GUID(0x11111112,0x00000891), &Aeffect::CI, 0, NULL);
ACI								AvisFront::CI	= ACI("AvisFront",	GUID(0x11111112,0x00000892), &AeffectFront::CI, 0, NULL);
ACI								AvisBack::CI	= ACI("AvisBack",	GUID(0x11111112,0x00000893), &AeffectBack::CI, 0, NULL);

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static int									viscount=0;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#define	VISREG								"Software"

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef struct
{
	HMODULE									hDLL;
	winampVisHeader							*header;
} ELIST;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static ELIST								elist[1024];
static int									nlist;
static char									wpath[1024];

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void listVIS()	
{
//	char		plug[1024];
	Aregistry	*reg=new Aregistry(VISREG, Aregistry::CURRENT_USER);
	int			n=0;
	if(!reg->read("Winamp", wpath, sizeof(wpath)))
		strcpy(wpath, "c:\\Program Files\\Winamp");
	/*
	{
		struct _finddata_t		fd;
		char					path[ALIB_PATH];
		sprintf(path, "%s\\Plugins\\*.dll", wpath);
		long					h=_findfirst(path, &fd);
		if(h!=-1)
		{
			int		r=0;
			while(r!=-1)
			{
				char		str[256];
				HINSTANCE	hDLL=NULL;
				sprintf(str, "%s\\plugins\\%s", wpath, fd.name);
				hDLL=LoadLibrary(str);
				if(hDLL)
				{
					winampVisGetHeaderType	getHeader=(winampVisGetHeaderType)GetProcAddress(hDLL, "winampVisGetHeader");
					if(getHeader)
					{
						elist[n].header=getHeader();
						elist[n].hDLL=hDLL;
						hDLL=NULL;
						n++;
					}
					if(hDLL)
						FreeLibrary(hDLL);
				}
				r=_findnext(h, &fd);
			}
			_findclose(h);
		}
	}
	nlist=n;
	*/
	delete(reg);
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

HWND findVis()
{
	HWND	hvis=null;
	while(1)
	{
		hvis=FindWindowEx(null, hvis, "Winamp Gen", null);
		if(hvis)
		{
			char	name[1024];
			SendMessage(hvis, WM_GETTEXT, 128, (LPARAM)name);
			if(strcmp(name, "Winamp Library"))
				return FindWindowEx(hvis, null, null, null);
		}
		else
			break;
	}
	return null;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

bool okVis()
{
	HWND	hvis=null;
	while(1)
	{
		hvis=FindWindowEx(null, hvis, "Winamp Gen", null);
		if(hvis)
		{
			char	name[1024];
			SendMessage(hvis, WM_GETTEXT, 128, (LPARAM)name);
			if(strcmp(name, "Winamp Library"))
				return true;
		}
		else
			break;
	}
	return false;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void launch()
{
	{
		char	path[1024];
		strcpy(path, wpath);
		strcat(path, "\\winamp.exe");
		exec(path);
	}
	{
		HWND hwa=FindWindowEx(null, null, "Winamp v1.x", null);
		if(hwa)
		{
			int		n=0;
			SendMessage(hwa, WM_KEYDOWN, 0x58, 0x002D0001);
			SendMessage(hwa, WM_KEYUP, 0x58, 0xC02D0001);
			if(!okVis())
			{
				HWND hold=SetFocus(hwa);
				SendMessage(hwa, WM_KEYDOWN, 0x10, 0x002A0001);
				SendMessage(hwa, WM_KEYDOWN, 0x11, 0x001D0001);
				SendMessage(hwa, WM_KEYDOWN, 0x4b, 0x00250001);
				SendMessage(hwa, WM_SYSCOMMAND, 0x9d00, 0x00001);
				SendMessage(hwa, WM_KEYUP, 0x4b, 0xc0250001);
				SendMessage(hwa, WM_KEYUP, 0x11, 0xc01D0001);
				SendMessage(hwa, WM_KEYUP, 0x10, 0xc02A0001);
				SetFocus(hold);
			}
		}
	}
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Avis::Avis(QIID qiid, char *name, AeffectInfo *info, Acapsule *capsule) : Aeffect(qiid, name, info, capsule)
{
	if(!(viscount++))
		listVIS();
		
	front=new AvisFront(qiid, "vis front", this, 50);
	front->setTooltips("winamp grabber");
	back=new AvisBack(qiid, "vis back", this, 50);
	back->setTooltips("winamp grabber");
	
	image=new Abitmap(8, 8);
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Avis::~Avis()
{
	delete(image);
	
	viscount--;
	if(!viscount)
	{
		int n;
		for(n=0; n<nlist; n++)
			FreeLibrary(elist[n].hDLL);
		memset(elist, 0, sizeof(elist));
		nlist=0;
	}
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

bool Avis::load(class Afile *f)
{
	return true;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

bool Avis::save(class Afile *f)
{
	return true;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

bool Avis::loadPreset(class Afile *f)
{
	AvisFront	*front=(AvisFront *)this->front;
	return true;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

bool Avis::savePreset(class Afile *f)
{
	AvisFront	*front=(AvisFront *)this->front;
	return true;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void Avis::settings(bool emergency)
{
	launch();
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void Avis::action(double time, double dtime, double beat, double dbeat)
{
	AvisBack	*back=(AvisBack *)this->back;
	Abitmap		*b=back->out->getBitmap();
	
	section.enter(__FILE__,__LINE__);
	if(b&&hvis)
	{
		RECT	r;
		POINT	p;
		int		w,h;
		if(GetWindowRect(hvis, &r))
		{
			w=(r.right-r.left)+1;
			h=(r.bottom-r.top)+1;
			if((image->w!=w)||(image->h!=h))
				image->size(w, h);
			p.x=0;
			p.y=0;
			if(ClientToScreen(hvis, &p))
			{
				image->getDesktop(p.x, p.y);
				b->set(0, 0, b->w, b->h, 2, 2, image->w-4, image->h-4, image);
			}
		}
	}
	section.leave();
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

AvisFront::AvisFront(QIID qiid, char *name, Avis *e, int h) : AeffectFront(qiid, name, e, h)
{
	Aresobj	o=resource.get(MAKEINTRESOURCE(PNG_VIS_FRONT), "PNG");
	back=new Abitmap(&o);

	timer(1000);
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

AvisFront::~AvisFront()
{
	delete(back);
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void AvisFront::paint(Abitmap *b)
{
	b->set(0, 0, back, bitmapDEFAULT, bitmapDEFAULT);
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void AvisFront::pulse()
{
	Avis	*vis=(Avis *)effect;
	vis->section.enter(__FILE__,__LINE__);
	vis->hvis=findVis();
	if(!vis->hvis)
	{
		launch();
		vis->hvis=findVis();
	}
	vis->section.leave();
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

bool AvisFront::notify(Anode *o, int event, dword p)
{
	switch(event)
	{
		case nyCHANGE:
		return TRUE;
	}
	return AeffectFront::notify(o, event, p);
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

AvisBack::AvisBack(QIID qiid, char *name, Avis *e, int h) : AeffectBack(qiid, name, e, h)
{
	Aresobj	o=resource.get(MAKEINTRESOURCE(PNG_VIS_BACK), "PNG");
	back=new Abitmap(&o);

	out=new Avideo(MKQIID(qiid, 0xb662b0770f95b748), "video out", this, pinOUT, pos.w-18, 10);
	out->setTooltips("video out");
	out->show(TRUE);
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

AvisBack::~AvisBack()
{
	delete(back);
	delete(out);
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void AvisBack::paint(Abitmap *b)
{
	b->set(0, 0, back, bitmapDEFAULT, bitmapDEFAULT);
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Aeffect * AvisInfo::create(QIID qiid, char *name, Acapsule *capsule)
{
	return new Avis(qiid, name, this, capsule);
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class Aplugz * visGetInfo()
{
	return new AvisInfo("visInfo", &Avis::CI, "winamp grabber", "winamp grabber module");
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
