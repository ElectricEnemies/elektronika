/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	VP10.H						(c)	YoY'04						WEB: www.aestesis.org
//
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#ifndef							_VP10_H_
#define							_VP10_H_
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include						<interface.h>
#include						"../elektro/elektro.h"
#include						"rhytmbox.h"
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#define							guidVP10						(Avp10::CI.guid)

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#define							VP10MAXEVENT					(32)

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


typedef struct Tvp10Event
{
	double						time;
	double						frame;
	double						pitch;
	double						level;
} Tvp10Event;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

typedef struct Tvp10State
{
	int							begin;
	//int						lenght;
	float						gpitch;
	float						gwin;
	float						position[8];
	float						pitch[8];
	//float						level[8];
} Tvp10State;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class Avp10 : public Aeffect
{
public:
	AOBJ

								Avp10							(QIID qiid, char *name, AeffectInfo *info, Acapsule *capsule);
	virtual						~Avp10							();

	virtual bool				save							(Afile *f);
	virtual bool				load							(Afile *f);

	virtual int					priority						()	{ return priorityFILTER; }
	virtual void				settings						(bool emergency);

	virtual bool				savePreset						(Afile *f);
	virtual bool				loadPreset						(Afile *f);
	
	virtual void				action							(double time, double dtime, double beat, double dbeat);

	void						performPlay						();

	void						loadState						();
	void						saveState						();
	
	void						newMovie						(char *file);
	void						press							(int c);
	double						getDeltaCue						(double dtime);
	bool						setBitmap						(Abitmap *b, float pos);	// [0..1f] relative to view size
	float						getPos							();	
	float						getViewSize						();
	float						getViewPos						();
	void						setViewSize						(float size);
	void						setViewPos						(float pos);
	

	Asection					section;
	class AmovieStream			*movie;
	double						frame;
	double						m_dframe;
	int							oframe;
	int							voframe;
	int							pressed;
	Tvp10State					states[4];
	int							curstate;
	Abitmap						*tmp;
	double						scratch_cue;
	double						scratch_delta;
	Tvp10Event					events[VP10MAXEVENT];
	int							nbevents;
	double						m_pitch;
	double						m_level;
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class Avp10Front : public AeffectFront
{
	AOBJ

								Avp10Front						(QIID qiid, char *name, Avp10 *e, int h);
	virtual						~Avp10Front						();

	bool						save							(Afile *f);
	bool						load							(Afile *f);

	bool						notify							(Anode *o, int event, dword p);
	void						paint							(Abitmap *b);
	virtual bool				dragdrop						(int x, int y, int state, int event, void *data=NULL);

	void						pulse							();
	
	Abitmap						*back;
	Abitmap						*sample;
	class Avp10Sel				*sel;
	Apaddle						*position[8];
	Apaddle						*pitch[8];
	Apaddle						*level[8];
	Apaddle						*gpitch;
	Apaddle						*gwin;
	AscrollBar					*scbar;
	Abitmap						*preview[6];
	AselButton					*curcolor;
	int							npulse;
	Aselect						*bank;
	Aselect						*pattern;
	Aselect						*states;
	ActrlButton					*patton;
	Apaddle						*shutter;
	Apaddle						*scratch;
	class Avp10Seq				*sequence;
	class Aseg7					*nsteps;
	class Aseg7					*nstart;
	ActrlButton					*play;
	AselButton					*selstep;
	Aselpad						*reso;
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class Avp10Back : public AeffectBack
{
	AOBJ

								Avp10Back						(QIID qiid, char *name, Avp10 *e, int h);
	virtual						~Avp10Back						();

	void						paint							(Abitmap *b);

	Abitmap						*back;

	Asample						*audio;
	Avideo						*video;
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class Avp10Info : public AeffectInfo
{
	AOBJ 

								Avp10Info						(char *name, ACI *eci, char *ename, char *ehelp);
	virtual int					getEffectClass					() { return PLAYER; }
	virtual dword				version							() { return 0x00020007; }	// 2005-10-25

	virtual Aeffect *			create							(QIID qiid, char *name, Acapsule *capsule);
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

__inline Avp10Info::Avp10Info(char *name, ACI *eci, char *ename, char *ehelp) : AeffectInfo(name, eci, ename, ehelp)
{
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class Aplugz *					vp10GetInfo					();

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#endif							//_VP10_H
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
